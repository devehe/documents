参考资料：
http://www.cnblogs.com/jinmu190/archive/2011/03/21/1990698.html

系统：ubuntu 12.04 32bit
toolchain: arm-none-eabi-

1. 编译安装qemu

2. 编译uboot-mini2440

最后链接时遇到错误
arm-none has EABI version 5, but target u-boot has EABI version 0
参考这里得知：
~/documents/uboot-DULG-v38b.pdf  第143页知道原因
解决方法: patch如下所示。

diff --git a/Makefile b/Makefile
index 21c5f3f..f184b93 100644
--- a/Makefile
+++ b/Makefile
@@ -137,7 +137,7 @@ ifeq ($(ARCH),ppc)
 CROSS_COMPILE = ppc_8xx-
 endif
 ifeq ($(ARCH),arm)
-CROSS_COMPILE = arm-linux-
+CROSS_COMPILE = arm-none-eabi-
 endif
 ifeq ($(ARCH),i386)
 CROSS_COMPILE = i386-linux-
diff --git a/cpu/arm920t/config.mk b/cpu/arm920t/config.mk
index 578e046..6ee2af4 100644
--- a/cpu/arm920t/config.mk
+++ b/cpu/arm920t/config.mk
@@ -30,8 +30,12 @@ PLATFORM_CPPFLAGS += -march=armv4t
 # Supply options according to compiler version
 #
 # =========================================================================
-PLATFORM_CPPFLAGS +=$(call cc-option,-mapcs-32,-mabi=apcs-gnu)
+#PLATFORM_CPPFLAGS +=$(call cc-option,-mapcs-32,-mabi=apcs-gnu)
+#PLATFORM_CPPFLAGS +=$(call cc-option,-mno-thumb-interwork,)
+
+PLATFORM_CPPFLAGS +=$(call cc-option,)
 PLATFORM_CPPFLAGS +=$(call cc-option,-mno-thumb-interwork,)
+
 PLATFORM_RELFLAGS +=$(call cc-option,-mshort-load-bytes,$(call cc-option,-malignment-traps,))
 PLATFORM_LDFLAGS += --defsym raise=hang
 
3. 启动uboot
说明：为了操作的简单，笔者对qemu定义了alias


prife@smart:~/projects/git/uboot-mini2400$ qemu -M mini2440 -serial stdio -mtdblock u-boot-nand2k.bin 

mini2440_init: Boot mode: NAND
mini2440_init: Unknown NAND size/id 235520 (0MB) defaulting to old 64MB
S3C: CLK=240 HCLK=240 PCLK=240 UCLK=57
QEMU: ee24c08_init
DM9000: INIT QEMU MAC : 52:54:00:12:34:56
nand_init no/invalid block device, allocating 131072*16 in ram
QEMU mini2440_reset: loaded default u-boot from NAND
QEMU mini2440_reset: loaded override u-boot (size 39800)
S3C: CLK=240 HCLK=60 PCLK=30 UCLK=57
S3C: CLK=240 HCLK=60 PCLK=30 UCLK=48
S3C: CLK=405 HCLK=101 PCLK=50 UCLK=48


U-Boot 1.3.2-mini2440 (Jul  8 2012 - 21:58:33)

I2C:   ready
DRAM:  64 MB
NOR Flash not found. Use hardware switch and 'flinit'
Flash:  0 kB
NAND:  Bad block table not found for chip 0
Bad block table not found for chip 0
64 MiB
*** Warning - bad CRC or NAND, using default environment

USB:   S3C2410 USB Deviced
In:    serial
Out:   serial
Err:   serial
MAC: 08:08:11:18:12:27
Hit any key to stop autoboot:  0 
MINI2440 # 
MINI2440 # 
MINI2440 # 
  s3c24xx autoscr bdinfo go reset bootm boot bootd iminfo imls coninfo date
  dynenv ext2ls ext2load fatload fatls fatinfo ...
MINI2440 # 

4. 配置NFS
其加入网络功能，实现NFS。
$ sudo apt-get install nfs-kernel-server
修改/etc/exports文件，添加如下一行
/home/username/nfs *(rw,sync,no_root_squash)----这个啥意思？？
我实际添加的是
/home/prife/work *(rw,sync,no_subtree_check)

cmd="qemu
	-M mini2440 $* \
	-serial stdio \
	-mtdblock "$name_nand" \
	-show-cursor \
	-usb -usbdevice keyboard -usbdevice mouse \
	-net nic,vlan=0 \
	-net tap,vlan=0,ifname=tap0 \
	-monitor telnet::5555,server,nowait"

注意上面的命令中，-net nic,vlan=0是啥意思？

研究发现，要想在qemu中适用网络功能，需要配置，阅读这篇文章：
http://hi.baidu.com/lvgb/blog/item/a5e41adf0f2c1a14622798f5.html

接下来研究，如何在ubuntu上配置tun呢？是否需要编译内核？

什么是tun
阅读一下：http://www.51know.info/system_base/tun_tap.html
检查内核是否有tun模块
$ modinfo tun
		ERROR: modinfo: could not find module tun

首先来阅读：
		虚拟网卡 TUN/TAP 驱动程序设计原理
		http://linux.chinaunix.net/docs/2006-11-24/3296.shtml

如何安装tun？

prife@smart:~/projects/git/uboot-mini2400$ qemu -M mini2440 -serial stdio -mtdblock u-boot-nand2k.bin -net nic,vlan=0 -net tap,vlan=0,ifname=tap0
warning: could not configure /dev/net/tun: no virtual network emulation
Could not initialize device 'tap'

因为 $ sudo modprob tun 没有报错，我假定tun已经者却加载

prife@smart:/lib/modules$ sudo tunctl -t tap0 -u prife
[sudo] password for prife: 
Set 'tap0' persistent and owned by uid 1000

接下来的操作为：
在建立两个脚本,分别为qemu-ifup, qemu-ifdown
qemu-ifup 脚本
		#!/bin/sh
		echo "Excuting qemu-ifup"
		ifconfig $1 10.0.0.1
qemu-ifdown脚本
		#!/bin/sh
		echo "Close tap!"
		sudo ifconfig $1 10.0.0.1 down

并给它们都用chmod+x加上可执行权限。

$ qemu-system-arm -M mini2440 -serial stdio -mtdblock ./mini2440_nand128.bin -usb -usbdevice keyboard -usbdevice mouse -net nic,vlan=0 -net tap,vlan=0,ifname=tap0 script=./qemu-ifup,downscript=./qemu-ifdown

		/etc/qemu-ifup: could not launch network script
		Could not initialize device 'tap'

囧，现在的症状下面的症状完全一样了。
http://blog.csdn.net/coolbacon/article/details/6252938
如果如这里所说，是uboot代码存在bug的话，那么为什么这里
http://www.cnblogs.com/jinmu190/archive/2011/03/21/1990698.html
可以操作呢？

prife@smart:~/projects/git/mini2440-qemu/mini2440$ ifconfig tap0 10.0.0.1
SIOCSIFADDR: 权限不够
SIOCSIFFLAGS: 权限不够

注意到mini2440_start.sh在这个脚本加入了sudo命令！

prife@smart:~/projects/git/mini2440-qemu/mini2440$ sudo ./qemu-ifup tap0
		Excuting qemu-ifup
prife@smart:~/projects/git/mini2440-qemu/mini2440$ sudo ./qemu-ifdown tap0
		close tap

可以看到这两个脚本是完全正确的。
看来真的如csdn那个博客所说，qemu的net.c有问题？？

先来试试他的修改吧。
prife@smart:~/projects/git/mini2440-qemu/mini2440$ sudo cp qemu-if* /etc/
prife@smart:~/projects/git/mini2440-qemu/mini2440$ cd ..
prife@smart:~/projects/git/mini2440-qemu$ ls /etc/qemu-if
qemu-ifdown  qemu-ifup    
prife@smart:~/projects/git/mini2440-qemu$ mini2440/mini2440_start.sh 
Starting in mini2440

sudo mini2440/../arm-softmmu/qemu-system-arm -M mini2440 -serial stdio -mtdblock mini2440/mini2440_nand128.bin -usb -usbdevice keyboard -usbdevice mouse -net nic,vlan=0 -net tap,vlan=0,ifname=tap0 script=./qemu-ifup,downscript=./qemu-ifdown
error:-1 2 8 /etc/qemu-ifup tap0
Excuting qemu-ifup
qemu: could not open disk image script=./qemu-ifup,downscript=./qemu-ifdown

上面的返回值为2，这表示
#define ENOENT   2 /* No such file or directory */

所以只要简单的将qemu-ifup和qemu-ifdown脚本复制到/etc目录下，再次运行，这次爆的错误不同了。

sudo /home/prife/projects/git/mini2440-qemu/arm-softmmu/qemu-system-arm -M mini2440 -serial stdio -mtdblock mini2440/mini2440_nand128.bin -usb -usbdevice keyboard -usbdevice mouse -net nic,vlan=0 -net tap,vlan=0,ifname=tap0 script=./qemu-ifup,downscript=./qemu-ifdown

--------------------------------------------------------------------------------
我知道原因了！当加入sudo以后，路径就变了，导致无法找到命令！！！！！
这就是为什么出现/etc/qemu-ifup的原因！


思考，为什么qemu会不停的爆浮点（核心转储存），我才测是我改动了qemmu的config里的编写选项，这次不改这一项，尝试更换工具链

--------------------------------------------------------------------------------
bare-metal: 裸机
命名规则
arm-none-linux-gnueabi (CodeSourcery ARM compiler for linux)
arm-none-eabi (CodeSourcery ARM compiler for bare-metal systems)
arm-eabi (Android ARM compiler)

The naming comes down to this:
arch-vendor-(os-)abi
x86_64-w64-mingw32 = x86_64 architecture (=AMD64), w64 (=mingw-w64 as "vendor"), mingw32 (=win32 API as seen by GCC)
i686-pc-msys = 32-bit (pc=generic name) msys binary
i686-unknown-linux-gnu = 32-bit GNU/linux

And your example specifically:
arm-none-linux-gnueabi = ARM architecture, no vendor, linux OS, and the gnueabi ABI.

The arm-eabi is alike you say, used for Android native apps.

--------------------------------------------------------------------------------
更换工具后成功：当前的工具链版本为：
arm-2010q1-188-arm-none-eabi.bin
20110314 arm-none-eabi.bin 和 arm-none-linux-gnueabi.bin都会爆EABI version 0错误

更换了编译器之后，依然会不停的包浮点数例外（核心已转储）

其他文章一概不看了，再看下面这篇！
http://code.google.com/p/mini2440/w/list


现在怀疑是桥接没有弄对：
sudo apt-get install bridge-utils


查看如下4篇文档
kvm-中文ubuntu论坛 
   http://forum.ubuntu.org.cn/viewtopic.php?f=65&t=154792
qemu nfs on Fedora14 
   http://webcache.googleusercontent.com/search?q=cache:2AJMClzBAmQJ:facetlife.blogspot.com/2011/01/qemu-mini2440-nfs.html+mini2440+qemu&cd=10&hl=zh-CN&ct=clnk

qemu on debain
		http://www.thomaskho.com/blog/2006/02/qemu-and-the-network-bridge/

补充说明：
http://www.arm9home.net/simple/index.php?t15864.html
http://project4fun.com/node/33

2012/07/12 02:36:29
qemu网络搞定！ 浮点例外的崩溃问题修正！

参考：
http://forums.debian.net/viewtopic.php?f=5&t=67398

注意，在ubuntu 12.04上 tun默认就是开启的，因此不需要编译内核！
只要 /dev/net/tun存在即可！
$ ls -l /dev/net/tun

安装必要的工具包
sudo apt-get install tunctl 
sudo apt-get install bridge-utils

修改下面三个文件
/etc/network/interfaces 
添加
/etc/qemu-ifup
/etc/qemu-ifdown

$ qemu -M mini2440 -mtdblock u-boot.nand -serial stdio \
	-net nic,vlan=0 -net tap,vlan=0,ifname=tap0
warning: could not configure /dev/net/tun: no virtual network emulation

那么执行 sudo /etc/qemu-ifup一下。
然后再执行上面的命令即可！

此时就可以顺利进入uboot了，然后
uboot >dhcp 
修改  serverip
主机启动 tftp & nfs
此时uboot中就可以正常使用tftp和nfs了。
